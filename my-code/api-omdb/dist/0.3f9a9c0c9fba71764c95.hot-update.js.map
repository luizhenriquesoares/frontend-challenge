{"version":3,"sources":["webpack:///./config/express.js","webpack:///./schema/type/films.js","webpack:///./schema/root-query.js","webpack:///./schema/schema.js"],"names":["_schema_schema__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","express","bodyParser","cors","logger","errorHandler","join","expressGraphQL","module","exports","app","use","credentials","origin","json","urlencoded","extended","schema","graphiql","static","__dirname","films","external_graphql_","name","description","fields","id","type","Title","root_query","args","resolve","parentValue","external_axios_default","a","get","then","response","data","query","__webpack_exports__"],"mappings":"wIAAA,IAAAA,EAAAC,EAAA,sBAAMC,EAAUD,EAAQ,WAClBE,EAAaF,EAAQ,eACrBG,EAAOH,EAAQ,QACfI,EAASJ,EAAQ,UACjBK,EAAeL,EAAQ,gBACvBM,EAAON,EAAQ,QAAQM,KAGvBC,EAAiBP,EAAQ,mBAE/BQ,EAAOC,QAAU,SAASC,GAMxBA,EAAIC,IAAIR,GAJNS,aAAa,EACbC,OAAQ,2BAIVH,EAAIC,IAAIT,EAAWY,QACnBJ,EAAIC,IAAIT,EAAWa,YAAaC,UAAU,KAC1CN,EAAIC,IACF,WACAJ,GACEU,OAAAlB,EAAA,EACAmB,UAAU,KAGdR,EAAIC,IAAIP,EAAO,QACfM,EAAIC,IAAIV,EAAQkB,OAAOb,EAAKc,EAAW,YACvCV,EAAIC,IAAIN,iLCjBVgB,EATkB,IAAIC,EAAA,mBACpBC,KAAM,QACNC,YAAa,uBACbC,OAAQ,kBACNC,IAAMC,KAAML,EAAA,eACZM,OAASD,KAAML,EAAA,mBCqBnBO,EApBkB,IAAIP,EAAA,mBACpBC,KAAM,gBACNE,QACEJ,OACEM,KAAMN,EACNS,MACEJ,IACEC,KAAML,EAAA,cACNM,OAASD,KAAML,EAAA,iBAGnBS,QARK,SAQGC,EAAaF,GACnB,OAAOG,EAAAC,EAAMC,IAAI,kDAAkDC,KAAK,SAAAC,GACtE,OAAOA,EAASC,YCbpBrB,EAAS,IAAIK,EAAA,eACjBiB,MAAOV,IAGTW,EAAA","file":"0.3f9a9c0c9fba71764c95.hot-update.js","sourcesContent":["const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst logger = require(\"morgan\");\r\nconst errorHandler = require(\"errorhandler\");\r\nconst join = require(\"path\").join;\r\n//const schema = require(\"../schema/schema\");\r\nimport schema from '../schema/schema'\r\nconst expressGraphQL = require(\"express-graphql\");\r\n\r\nmodule.exports = function(app) {\r\n  const corsOptions = {\r\n    credentials: true,\r\n    origin: \"http://localhost:3030\"\r\n  };\r\n\r\n  app.use(cors(corsOptions)); // include before other routes\r\n  app.use(bodyParser.json());\r\n  app.use(bodyParser.urlencoded({ extended: false }));\r\n  app.use(\r\n    \"/graphql\",\r\n    expressGraphQL({\r\n      schema,\r\n      graphiql: true\r\n    })\r\n  );\r\n  app.use(logger(\"dev\"));\r\n  app.use(express.static(join(__dirname, \"public\")));\r\n  app.use(errorHandler());\r\n};\r\n","import { GraphQLObjectType, GraphQLString } from 'graphql'\r\n\r\nconst FilmsType = new GraphQLObjectType({\r\n  name: 'Films',\r\n  description: 'this represent Films',\r\n  fields: () => ({\r\n    id: { type: GraphQLString },\r\n    Title: { type: GraphQLString}\r\n  })\r\n})\r\n\r\nexport default FilmsType\r\n","import axios from 'axios'\r\nimport { GraphQLSchema, GraphQLObjectType, GraphQLString } from 'graphql'\r\nimport FilmsType from './type/films'\r\n\r\n/* -------------------------------------------------------------------------- *\\\r\n *  Exposes Root Query GraphQL\r\n\\* -------------------------------------------------------------------------- */\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n  name: 'RootQueryType',\r\n  fields: {\r\n    films: {\r\n      type: FilmsType,\r\n      args: {\r\n        id: {\r\n          type: GraphQLString,\r\n          Title: { type: GraphQLString}\r\n        }\r\n      },\r\n      resolve(parentValue, args) {\r\n        return axios.get('http://www.omdbapi.com/?t=game&apikey=BanMePlz').then(response => {\r\n          return response.data\r\n        })\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default RootQuery;","import RootQuery from './root-query'\r\nimport { GraphQLSchema } from 'graphql'\r\n\r\n\r\n/* -------------------------------------------------------------------------- *\\\r\n *  Exports Schemas GraphQL\r\n\\* -------------------------------------------------------------------------- */\r\n\r\nconst schema = new GraphQLSchema({\r\n  query: RootQuery\r\n})\r\n\r\nexport default schema\r\n"],"sourceRoot":""}