{"version":3,"sources":["webpack:///./app.js","webpack:///./config/express.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./schema/type/films.js","webpack:///./schema/root-query.js","webpack:///./schema/schema.js"],"names":["_config_express__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","dotenv__WEBPACK_IMPORTED_MODULE_3___default","a","load","path","port","Object","BUILD_TARGET","PORT","app","express__WEBPACK_IMPORTED_MODULE_1___default","__webpack_exports__","listen","console","log","chalk__WEBPACK_IMPORTED_MODULE_2___default","green","get","module","hot","accept","__WEBPACK_OUTDATED_DEPENDENCIES__","_schema_schema__WEBPACK_IMPORTED_MODULE_0__","express","bodyParser","cors","logger","errorHandler","join","expressGraphQL","exports","use","credentials","origin","json","urlencoded","extended","schema","graphiql","static","__dirname","originalModule","webpackPolyfill","create","children","defineProperty","enumerable","l","i","films","external_graphql_","name","description","fields","id","type","Title","root_query","args","resolve","parentValue","external_axios_default","then","response","data","query"],"mappings":"sMAAAA,EAAAC,EAAA,uBAOAC,EAAAC,EAAOC,MACLC,KAAM,SAER,IAAMC,EAAOC,QAAAC,aAAA,QAAYC,MAAQ,IAG3BC,EAAMC,MAIZJ,OAAAP,EAAA,QAAAO,CAAWG,GAGXE,EAAA,UAEA,IAAMC,EAAS,WACbH,EAAIG,OAAOP,EAAM,WACfQ,QAAQC,IACN,qDACAC,EAAAb,EAAMc,MAAM,KACZX,EACAI,EAAIQ,IAAI,WAMZC,EAAOC,IAAIC,QAAQ,YAAU,SAAAC,GAC3BT,MAGJA,uECtCA,IAAAU,EAAAtB,EAAA,sBAAMuB,EAAUvB,EAAQ,WAClBwB,EAAaxB,EAAQ,eACrByB,EAAOzB,EAAQ,QACf0B,EAAS1B,EAAQ,UACjB2B,EAAe3B,EAAQ,gBACvB4B,EAAO5B,EAAQ,QAAQ4B,KAGvBC,EAAiB7B,EAAQ,mBAE/BkB,EAAOY,QAAU,SAACrB,GAMhBA,EAAIsB,IAAIN,GAJNO,aAAa,EACbC,OAAQ,2BAIVxB,EAAIsB,IAAIP,EAAWU,QACnBzB,EAAIsB,IAAIP,EAAWW,YAAaC,UAAU,KAC1C3B,EAAIsB,IACF,WACAF,GACEQ,OAAAf,EAAA,OACAgB,UAAU,KAGd7B,EAAIsB,IAAIL,EAAO,QACfjB,EAAIsB,IAAIR,EAAQgB,OAAOX,EAAKY,EAAW,YACvC/B,EAAIsB,IAAIJ,uJC5BVT,EAAAY,QAAA,SAAAW,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAxB,EAAAZ,OAAAqC,OAAAF,GAEAvB,EAAA0B,WAAA1B,EAAA0B,aACAtC,OAAAuC,eAAA3B,EAAA,UACA4B,YAAA,EACA7B,IAAA,WACA,OAAAC,EAAA6B,KAGAzC,OAAAuC,eAAA3B,EAAA,MACA4B,YAAA,EACA7B,IAAA,WACA,OAAAC,EAAA8B,KAGA1C,OAAAuC,eAAA3B,EAAA,WACA4B,YAAA,IAEA5B,EAAAwB,gBAAA,EAEA,OAAAxB,+FCXA+B,EATkB,IAAIC,EAAA,mBACpBC,KAAM,QACNC,YAAa,uBACbC,OAAQ,kBACNC,IAAMC,KAAML,EAAA,eACZM,OAASD,KAAML,EAAA,mBCqBnBO,EApBkB,IAAIP,EAAA,mBACpBC,KAAM,gBACNE,QACEJ,OACEM,KAAMN,EACNS,MACEJ,IACEC,KAAML,EAAA,cACNM,OAASD,KAAML,EAAA,iBAGnBS,QARK,SAQGC,EAAaF,GACnB,OAAOG,EAAA3D,EAAMe,IAAI,kDAAkD6C,KAAK,SAAAC,GACtE,OAAOA,EAASC,YCdX,IAAId,EAAA,eACjBe,MAAOR","file":"0.31a6fb8743a78ccae2ed.hot-update.js","sourcesContent":["/* dependencies-------------------------------------------------------------- */\r\nimport fs from 'fs'\r\nimport express from 'express'\r\nimport chalk from 'chalk'\r\nimport dotenv from 'dotenv'\r\n\r\n/* ENV ---------------------------------------------------------------------- */\r\ndotenv.load({\r\n  path: '.env'\r\n})\r\nconst port = process.env.PORT || 4000\r\n\r\n/* app config --------------------------------------------------------------- */\r\nconst app = express()\r\n\r\nimport expressEs6 from './config/express'\r\n\r\nexpressEs6(app)\r\n\r\n/* bootstrap ---------------------------------------------------------------- */\r\nexport default app\r\n\r\nconst listen = () => {\r\n  app.listen(port, () => {\r\n    console.log(\r\n      '%s Express server listening on port %d in %s mode.',\r\n      chalk.green('âœ“'),\r\n      port,\r\n      app.get('env')\r\n    )\r\n  })\r\n}\r\n\r\nif (module.hot) {\r\n  module.hot.accept(['./app'], () => {\r\n    listen()\r\n  })\r\n}\r\nlisten()\r\n","const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst logger = require(\"morgan\");\r\nconst errorHandler = require(\"errorhandler\");\r\nconst join = require(\"path\").join;\r\n//const  schema  = require(\"../schema/schema\");\r\nimport { schema } from '../schema/schema'\r\nconst expressGraphQL = require(\"express-graphql\");\r\n\r\nmodule.exports = (app) => {\r\n  const corsOptions = {\r\n    credentials: true,\r\n    origin: \"http://localhost:3030\"\r\n  };\r\n\r\n  app.use(cors(corsOptions)); // include before other routes\r\n  app.use(bodyParser.json());\r\n  app.use(bodyParser.urlencoded({ extended: false }));\r\n  app.use(\r\n    \"/graphql\",\r\n    expressGraphQL({\r\n      schema,\r\n      graphiql: true\r\n    })\r\n  );\r\n  app.use(logger(\"dev\"));\r\n  app.use(express.static(join(__dirname, \"public\")));\r\n  app.use(errorHandler());\r\n};\r\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { GraphQLObjectType, GraphQLString } from 'graphql'\r\n\r\nconst FilmsType = new GraphQLObjectType({\r\n  name: 'Films',\r\n  description: 'this represent Films',\r\n  fields: () => ({\r\n    id: { type: GraphQLString },\r\n    Title: { type: GraphQLString}\r\n  })\r\n})\r\n\r\nexport default FilmsType\r\n","import axios from 'axios'\r\nimport { GraphQLSchema, GraphQLObjectType, GraphQLString } from 'graphql'\r\nimport FilmsType from './type/films'\r\n\r\n/* -------------------------------------------------------------------------- *\\\r\n *  Exposes Root Query GraphQL\r\n\\* -------------------------------------------------------------------------- */\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n  name: 'RootQueryType',\r\n  fields: {\r\n    films: {\r\n      type: FilmsType,\r\n      args: {\r\n        id: {\r\n          type: GraphQLString,\r\n          Title: { type: GraphQLString}\r\n        }\r\n      },\r\n      resolve(parentValue, args) {\r\n        return axios.get('http://www.omdbapi.com/?t=game&apikey=BanMePlz').then(response => {\r\n          return response.data\r\n        })\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default RootQuery;","import RootQuery from './root-query'\r\nimport { GraphQLSchema } from 'graphql'\r\n\r\n/* -------------------------------------------------------------------------- *\\\r\n *  Exports Schemas GraphQL\r\n\\* -------------------------------------------------------------------------- */\r\n\r\nconst schema = new GraphQLSchema({\r\n  query: RootQuery\r\n})\r\n\r\nexport default {\r\n  schema: schema\r\n}\r\n"],"sourceRoot":""}