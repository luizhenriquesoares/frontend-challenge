{"version":3,"sources":["webpack:///./app.js","webpack:///./config/express.js","webpack:///./schema/schema.js","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"errorhandler\"","webpack:///external \"express\"","webpack:///external \"express-graphql\"","webpack:///external \"morgan\"","webpack:///external \"path\""],"names":["dotenv","load","path","port","PORT","app","express","expressEs6","listen","console","log","chalk","green","get","module","hot","accept","require","bodyParser","cors","logger","errorHandler","join","schema","expressGraphQL","exports","corsOptions","credentials","origin","use","json","urlencoded","extended","graphiql","static","__dirname","graphqlSchema","query","RootQuery"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAAAA,CAAOC,IAAP,CAAY;AACVC,QAAM;AADI,CAAZ;AAGA,IAAMC,OAAO,+BAAYC,IAAZ,IAAoB,IAAjC;;AAEA;AACA,IAAMC,MAAM,+CAAAC,EAAZ;;AAEA;;AAEA,uDAAAC,CAAWF,GAAX;;AAEA;AACA,+DAAeA,GAAf;;AAEA,IAAMG,SAAS,SAATA,MAAS,GAAM;AACnBH,MAAIG,MAAJ,CAAWL,IAAX,EAAiB,YAAM;AACrBM,YAAQC,GAAR,CACE,oDADF,EAEE,6CAAAC,CAAMC,KAAN,CAAY,GAAZ,CAFF,EAGET,IAHF,EAIEE,IAAIQ,GAAJ,CAAQ,KAAR,CAJF;AAMD,GAPD;AAQD,CATD;;AAWA,IAAI,IAAJ,EAAgB;AACdC,SAAOC,GAAP,CAAWC,MAAX,CAAkB,CAAC,UAAD,CAAlB,EAA6B,YAAM;AACjCR;AACD,GAFD;AAGD;AACDA,S;;;;;;;;ACtCA,qDAAMF,UAAU,mBAAAW,CAAQ,SAAR,CAAhB;AACA,IAAMC,aAAa,mBAAAD,CAAQ,aAAR,CAAnB;AACA,IAAME,OAAO,mBAAAF,CAAQ,MAAR,CAAb;AACA,IAAMG,SAAS,mBAAAH,CAAQ,QAAR,CAAf;AACA,IAAMI,eAAe,mBAAAJ,CAAQ,cAAR,CAArB;AACA,IAAMK,OAAO,mBAAAL,CAAQ,MAAR,EAAgBK,IAA7B;AACA,IAAMC,SAAS,mBAAAN,CAAQ,oBAAR,CAAf;AACA,IAAMO,iBAAiB,mBAAAP,CAAQ,iBAAR,CAAvB;;AAEAH,OAAOW,OAAP,GAAiB,UAASpB,GAAT,EAAc;AAC7B,MAAMqB,cAAc;AAClBC,iBAAa,IADK;AAElBC,YAAQ;AAFU,GAApB;;AAKAvB,MAAIwB,GAAJ,CAAQV,KAAKO,WAAL,CAAR,EAN6B,CAMD;AAC5BrB,MAAIwB,GAAJ,CAAQX,WAAWY,IAAX,EAAR;AACAzB,MAAIwB,GAAJ,CAAQX,WAAWa,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA3B,MAAIwB,GAAJ,CACE,UADF,EAEEL,eAAe;AACbD,kBADa;AAEbU,cAAU;AAFG,GAAf,CAFF;AAOA5B,MAAIwB,GAAJ,CAAQT,OAAO,KAAP,CAAR;AACAf,MAAIwB,GAAJ,CAAQvB,QAAQ4B,MAAR,CAAeZ,KAAKa,SAAL,EAAgB,QAAhB,CAAf,CAAR;AACA9B,MAAIwB,GAAJ,CAAQR,cAAR;AACD,CAnBD,C;;;;;;;;;;;;;ACTA;AACA;;AAEA;;;;AAIA,IAAMe,gBAAgB,IAAI,sDAAJ,CAAkB;AACtCC,SAAO,4DAAAC;AAD+B,CAAlB,CAAtB;;AAIA,+DAAeF,aAAf,E;;;;;;;ACXA,wC;;;;;;;ACAA,iC;;;;;;;ACAA,yC;;;;;;;ACAA,oC;;;;;;;ACAA,4C;;;;;;;ACAA,mC;;;;;;;ACAA,iC","file":"0.8fc9ad604ee259718ca4.hot-update.js","sourcesContent":["/* dependencies-------------------------------------------------------------- */\r\nimport fs from 'fs'\r\nimport express from 'express'\r\nimport chalk from 'chalk'\r\nimport dotenv from 'dotenv'\r\n\r\n/* ENV ---------------------------------------------------------------------- */\r\ndotenv.load({\r\n  path: '.env'\r\n})\r\nconst port = process.env.PORT || 4000\r\n\r\n/* app config --------------------------------------------------------------- */\r\nconst app = express()\r\n\r\nimport expressEs6 from './config/express'\r\n\r\nexpressEs6(app)\r\n\r\n/* bootstrap ---------------------------------------------------------------- */\r\nexport default app\r\n\r\nconst listen = () => {\r\n  app.listen(port, () => {\r\n    console.log(\r\n      '%s Express server listening on port %d in %s mode.',\r\n      chalk.green('âœ“'),\r\n      port,\r\n      app.get('env')\r\n    )\r\n  })\r\n}\r\n\r\nif (module.hot) {\r\n  module.hot.accept(['./app'], () => {\r\n    listen()\r\n  })\r\n}\r\nlisten()\r\n\n\n\n// WEBPACK FOOTER //\n// ./app.js","const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst logger = require(\"morgan\");\r\nconst errorHandler = require(\"errorhandler\");\r\nconst join = require(\"path\").join;\r\nconst schema = require(\"../schema/schema\");\r\nconst expressGraphQL = require(\"express-graphql\");\r\n\r\nmodule.exports = function(app) {\r\n  const corsOptions = {\r\n    credentials: true,\r\n    origin: \"http://localhost:3030\"\r\n  };\r\n\r\n  app.use(cors(corsOptions)); // include before other routes\r\n  app.use(bodyParser.json());\r\n  app.use(bodyParser.urlencoded({ extended: false }));\r\n  app.use(\r\n    \"/graphql\",\r\n    expressGraphQL({\r\n      schema,\r\n      graphiql: true\r\n    })\r\n  );\r\n  app.use(logger(\"dev\"));\r\n  app.use(express.static(join(__dirname, \"public\")));\r\n  app.use(errorHandler());\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/express.js","import RootQuery from './root-query'\r\nimport { GraphQLSchema } from 'graphql'\r\n\r\n/* -------------------------------------------------------------------------- *\\\r\n *  Exports Schemas GraphQL\r\n\\* -------------------------------------------------------------------------- */\r\n\r\nconst graphqlSchema = new GraphQLSchema({\r\n  query: RootQuery\r\n})\r\n\r\nexport default graphqlSchema\r\n\n\n\n// WEBPACK FOOTER //\n// ./schema/schema.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = body-parser\n// module chunks = 0","module.exports = require(\"cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cors\"\n// module id = cors\n// module chunks = 0","module.exports = require(\"errorhandler\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"errorhandler\"\n// module id = errorhandler\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = express\n// module chunks = 0","module.exports = require(\"express-graphql\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-graphql\"\n// module id = express-graphql\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = morgan\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = path\n// module chunks = 0"],"sourceRoot":""}