{"version":3,"sources":["webpack:///./app.js","webpack:///./config/express.js"],"names":["dotenv","load","path","port","PORT","app","express","listen","expressEs6","console","log","chalk","green","get","module","hot","accept","corsOptions","credentials","origin","use","cors","bodyParser","json","urlencoded","extended","expressGraphQL","schema","graphiql","logger","static","join","__dirname","errorHandler"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAAAA,CAAOC,IAAP,CAAY;AACVC,QAAM;AADI,CAAZ;AAGA,IAAMC,OAAO,+BAAYC,IAAZ,IAAoB,IAAjC;;AAEA;AACA,IAAMC,MAAM,+CAAAC,EAAZ;;AAEA;;AAGA;AACA,+DAAeD,GAAf;;AAEA,IAAME,SAAS,SAATA,MAAS,GAAM;AACnBC,EAAA,wEAAAA,CAAWH,GAAX;;AAEAA,MAAIE,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACrBM,YAAQC,GAAR,CACE,oDADF,EAEE,6CAAAC,CAAMC,KAAN,CAAY,GAAZ,CAFF,EAGET,IAHF,EAIEE,IAAIQ,GAAJ,CAAQ,KAAR,CAJF;AAMD,GAPD;AAQD,CAXD;;AAaA,IAAI,IAAJ,EAAgB;AACdC,SAAOC,GAAP,CAAWC,MAAX,CAAkB,CAAC,UAAD,CAAlB,EAA6B,YAAM;AACjCT;AACD,GAFD;AAGD;AACDA,S;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAe,UAACF,GAAD,EAAS;AACtB,MAAMY,cAAc;AAClBC,iBAAa,IADK;AAElBC,YAAQ;AAFU,GAApB;;AAKAd,MAAIe,GAAJ,CAAQ,4CAAAC,CAAKJ,WAAL,CAAR,EANsB,CAMK;AAC3BZ,MAAIe,GAAJ,CAAQ,mDAAAE,CAAWC,IAAX,EAAR;;AAEAlB,MAAIe,GAAJ,CAAQ,mDAAAE,CAAWE,UAAX,CAAsB;AAC5BC,cAAU;AADkB,GAAtB,CAAR;AAGApB,MAAIe,GAAJ,CAAQ,UAAR,EAAoB,uDAAAM,CAAe;AAC/BC,YAAQ,+DADuB;AAE/BC,cAAU;AAFqB,GAAf,CAApB;AAKAvB,MAAIe,GAAJ,CAAQ,8CAAAS,CAAO,KAAP,CAAR;AACAxB,MAAIe,GAAJ,CAAQ,+CAAAd,CAAQwB,MAAR,CAAe,4CAAAC,CAAKC,SAAL,EAAgB,QAAhB,CAAf,CAAR;AACA3B,MAAIe,GAAJ,CAAQ,oDAAAa,EAAR;AACD,CApBD,E","file":"0.ac51c54e769b3db61a47.hot-update.js","sourcesContent":["/* dependencies-------------------------------------------------------------- */\r\nimport fs from 'fs'\r\nimport express from 'express'\r\nimport chalk from 'chalk'\r\nimport dotenv from 'dotenv'\r\n\r\n/* ENV ---------------------------------------------------------------------- */\r\ndotenv.load({\r\n  path: '.env'\r\n})\r\nconst port = process.env.PORT || 4000\r\n\r\n/* app config --------------------------------------------------------------- */\r\nconst app = express()\r\n\r\nimport expressEs6 from './config/express'\r\n\r\n\r\n/* bootstrap ---------------------------------------------------------------- */\r\nexport default app\r\n\r\nconst listen = () => {\r\n  expressEs6(app)\r\n\r\n  app.listen(port, () => {\r\n    console.log(\r\n      '%s Express server listening on port %d in %s mode.',\r\n      chalk.green('âœ“'),\r\n      port,\r\n      app.get('env')\r\n    )\r\n  })\r\n}\r\n\r\nif (module.hot) {\r\n  module.hot.accept(['./app'], () => {\r\n    listen()\r\n  })\r\n}\r\nlisten()\r\n\n\n\n// WEBPACK FOOTER //\n// ./app.js","import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport cors from 'cors'\r\nimport logger from 'morgan'\r\nimport errorHandler from 'errorhandler'\r\nimport join from 'path'\r\nimport schemaGraphql from '../schema/schema'\r\nimport expressGraphQL from 'express-graphql'\r\n\r\nexport default (app) => {\r\n  const corsOptions = {\r\n    credentials: true,\r\n    origin: 'http://localhost:8080'\r\n  }\r\n\r\n  app.use(cors(corsOptions)) // include before other routes\r\n  app.use(bodyParser.json())\r\n\r\n  app.use(bodyParser.urlencoded({\r\n    extended: false\r\n  }))\r\n  app.use(\"/graphql\", expressGraphQL({\r\n      schema: schemaGraphql,\r\n      graphiql: true\r\n    })\r\n  );\r\n  app.use(logger('dev'))\r\n  app.use(express.static(join(__dirname, 'public')))\r\n  app.use(errorHandler())\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/express.js"],"sourceRoot":""}